package live

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ImagePornDetection invokes the live.ImagePornDetection API synchronously
// api document: https://help.aliyun.com/api/live/imageporndetection.html
func (client *Client) ImagePornDetection(request *ImagePornDetectionRequest) (response *ImagePornDetectionResponse, err error) {
	response = CreateImagePornDetectionResponse()
	err = client.DoAction(request, response)
	return
}

// ImagePornDetectionWithChan invokes the live.ImagePornDetection API asynchronously
// api document: https://help.aliyun.com/api/live/imageporndetection.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ImagePornDetectionWithChan(request *ImagePornDetectionRequest) (<-chan *ImagePornDetectionResponse, <-chan error) {
	responseChan := make(chan *ImagePornDetectionResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ImagePornDetection(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ImagePornDetectionWithCallback invokes the live.ImagePornDetection API asynchronously
// api document: https://help.aliyun.com/api/live/imageporndetection.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ImagePornDetectionWithCallback(request *ImagePornDetectionRequest, callback func(response *ImagePornDetectionResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ImagePornDetectionResponse
		var err error
		defer close(result)
		response, err = client.ImagePornDetection(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ImagePornDetectionRequest is the request struct for api ImagePornDetection
type ImagePornDetectionRequest struct {
	*requests.RpcRequest
	SecurityToken string           `position:"Query" name:"SecurityToken"`
	ImageUrl      string           `position:"Query" name:"ImageUrl"`
	OwnerId       requests.Integer `position:"Query" name:"OwnerId"`
}

// ImagePornDetectionResponse is the response struct for api ImagePornDetection
type ImagePornDetectionResponse struct {
	*responses.BaseResponse
	RequestId string  `json:"RequestId" xml:"RequestId"`
	Label     string  `json:"Label" xml:"Label"`
	Rate      float64 `json:"Rate" xml:"Rate"`
}

// CreateImagePornDetectionRequest creates a request to invoke ImagePornDetection API
func CreateImagePornDetectionRequest() (request *ImagePornDetectionRequest) {
	request = &ImagePornDetectionRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("live", "2016-11-01", "ImagePornDetection", "live", "openAPI")
	return
}

// CreateImagePornDetectionResponse creates a response to parse from ImagePornDetection response
func CreateImagePornDetectionResponse() (response *ImagePornDetectionResponse) {
	response = &ImagePornDetectionResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
