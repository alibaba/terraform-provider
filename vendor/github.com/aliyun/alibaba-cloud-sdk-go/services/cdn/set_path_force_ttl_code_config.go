package cdn

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// SetPathForceTtlCodeConfig invokes the cdn.SetPathForceTtlCodeConfig API synchronously
// api document: https://help.aliyun.com/api/cdn/setpathforcettlcodeconfig.html
func (client *Client) SetPathForceTtlCodeConfig(request *SetPathForceTtlCodeConfigRequest) (response *SetPathForceTtlCodeConfigResponse, err error) {
	response = CreateSetPathForceTtlCodeConfigResponse()
	err = client.DoAction(request, response)
	return
}

// SetPathForceTtlCodeConfigWithChan invokes the cdn.SetPathForceTtlCodeConfig API asynchronously
// api document: https://help.aliyun.com/api/cdn/setpathforcettlcodeconfig.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) SetPathForceTtlCodeConfigWithChan(request *SetPathForceTtlCodeConfigRequest) (<-chan *SetPathForceTtlCodeConfigResponse, <-chan error) {
	responseChan := make(chan *SetPathForceTtlCodeConfigResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.SetPathForceTtlCodeConfig(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// SetPathForceTtlCodeConfigWithCallback invokes the cdn.SetPathForceTtlCodeConfig API asynchronously
// api document: https://help.aliyun.com/api/cdn/setpathforcettlcodeconfig.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) SetPathForceTtlCodeConfigWithCallback(request *SetPathForceTtlCodeConfigRequest, callback func(response *SetPathForceTtlCodeConfigResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *SetPathForceTtlCodeConfigResponse
		var err error
		defer close(result)
		response, err = client.SetPathForceTtlCodeConfig(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// SetPathForceTtlCodeConfigRequest is the request struct for api SetPathForceTtlCodeConfig
type SetPathForceTtlCodeConfigRequest struct {
	*requests.RpcRequest
	DomainName    string           `position:"Query" name:"DomainName"`
	OwnerId       requests.Integer `position:"Query" name:"OwnerId"`
	Version       string           `position:"Query" name:"Version"`
	CodeString    string           `position:"Query" name:"CodeString"`
	Path          string           `position:"Query" name:"Path"`
	SecurityToken string           `position:"Query" name:"SecurityToken"`
}

// SetPathForceTtlCodeConfigResponse is the response struct for api SetPathForceTtlCodeConfig
type SetPathForceTtlCodeConfigResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateSetPathForceTtlCodeConfigRequest creates a request to invoke SetPathForceTtlCodeConfig API
func CreateSetPathForceTtlCodeConfigRequest() (request *SetPathForceTtlCodeConfigRequest) {
	request = &SetPathForceTtlCodeConfigRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Cdn", "2014-11-11", "SetPathForceTtlCodeConfig", "", "")
	return
}

// CreateSetPathForceTtlCodeConfigResponse creates a response to parse from SetPathForceTtlCodeConfig response
func CreateSetPathForceTtlCodeConfigResponse() (response *SetPathForceTtlCodeConfigResponse) {
	response = &SetPathForceTtlCodeConfigResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
