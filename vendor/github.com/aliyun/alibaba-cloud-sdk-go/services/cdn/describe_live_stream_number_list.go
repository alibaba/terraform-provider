package cdn

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeLiveStreamNumberList invokes the cdn.DescribeLiveStreamNumberList API synchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamnumberlist.html
func (client *Client) DescribeLiveStreamNumberList(request *DescribeLiveStreamNumberListRequest) (response *DescribeLiveStreamNumberListResponse, err error) {
	response = CreateDescribeLiveStreamNumberListResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeLiveStreamNumberListWithChan invokes the cdn.DescribeLiveStreamNumberList API asynchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamnumberlist.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeLiveStreamNumberListWithChan(request *DescribeLiveStreamNumberListRequest) (<-chan *DescribeLiveStreamNumberListResponse, <-chan error) {
	responseChan := make(chan *DescribeLiveStreamNumberListResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeLiveStreamNumberList(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeLiveStreamNumberListWithCallback invokes the cdn.DescribeLiveStreamNumberList API asynchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamnumberlist.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeLiveStreamNumberListWithCallback(request *DescribeLiveStreamNumberListRequest, callback func(response *DescribeLiveStreamNumberListResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeLiveStreamNumberListResponse
		var err error
		defer close(result)
		response, err = client.DescribeLiveStreamNumberList(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeLiveStreamNumberListRequest is the request struct for api DescribeLiveStreamNumberList
type DescribeLiveStreamNumberListRequest struct {
	*requests.RpcRequest
	AppName       string           `position:"Query" name:"AppName"`
	SecurityToken string           `position:"Query" name:"SecurityToken"`
	DomainName    string           `position:"Query" name:"DomainName"`
	EndTime       string           `position:"Query" name:"EndTime"`
	StartTime     string           `position:"Query" name:"StartTime"`
	OwnerId       requests.Integer `position:"Query" name:"OwnerId"`
}

// DescribeLiveStreamNumberListResponse is the response struct for api DescribeLiveStreamNumberList
type DescribeLiveStreamNumberListResponse struct {
	*responses.BaseResponse
	RequestId         string            `json:"RequestId" xml:"RequestId"`
	DomainName        string            `json:"DomainName" xml:"DomainName"`
	StreamNumberInfos StreamNumberInfos `json:"StreamNumberInfos" xml:"StreamNumberInfos"`
}

// CreateDescribeLiveStreamNumberListRequest creates a request to invoke DescribeLiveStreamNumberList API
func CreateDescribeLiveStreamNumberListRequest() (request *DescribeLiveStreamNumberListRequest) {
	request = &DescribeLiveStreamNumberListRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Cdn", "2014-11-11", "DescribeLiveStreamNumberList", "", "")
	return
}

// CreateDescribeLiveStreamNumberListResponse creates a response to parse from DescribeLiveStreamNumberList response
func CreateDescribeLiveStreamNumberListResponse() (response *DescribeLiveStreamNumberListResponse) {
	response = &DescribeLiveStreamNumberListResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
