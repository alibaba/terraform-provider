package cdn

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeLiveStreamOnlineUserNumByDomain invokes the cdn.DescribeLiveStreamOnlineUserNumByDomain API synchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamonlineusernumbydomain.html
func (client *Client) DescribeLiveStreamOnlineUserNumByDomain(request *DescribeLiveStreamOnlineUserNumByDomainRequest) (response *DescribeLiveStreamOnlineUserNumByDomainResponse, err error) {
	response = CreateDescribeLiveStreamOnlineUserNumByDomainResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeLiveStreamOnlineUserNumByDomainWithChan invokes the cdn.DescribeLiveStreamOnlineUserNumByDomain API asynchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamonlineusernumbydomain.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeLiveStreamOnlineUserNumByDomainWithChan(request *DescribeLiveStreamOnlineUserNumByDomainRequest) (<-chan *DescribeLiveStreamOnlineUserNumByDomainResponse, <-chan error) {
	responseChan := make(chan *DescribeLiveStreamOnlineUserNumByDomainResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeLiveStreamOnlineUserNumByDomain(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeLiveStreamOnlineUserNumByDomainWithCallback invokes the cdn.DescribeLiveStreamOnlineUserNumByDomain API asynchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamonlineusernumbydomain.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeLiveStreamOnlineUserNumByDomainWithCallback(request *DescribeLiveStreamOnlineUserNumByDomainRequest, callback func(response *DescribeLiveStreamOnlineUserNumByDomainResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeLiveStreamOnlineUserNumByDomainResponse
		var err error
		defer close(result)
		response, err = client.DescribeLiveStreamOnlineUserNumByDomain(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeLiveStreamOnlineUserNumByDomainRequest is the request struct for api DescribeLiveStreamOnlineUserNumByDomain
type DescribeLiveStreamOnlineUserNumByDomainRequest struct {
	*requests.RpcRequest
	AppName       string           `position:"Query" name:"AppName"`
	SecurityToken string           `position:"Query" name:"SecurityToken"`
	HlsSwitch     string           `position:"Query" name:"HlsSwitch"`
	DomainName    string           `position:"Query" name:"DomainName"`
	PageSize      requests.Integer `position:"Query" name:"PageSize"`
	OwnerId       requests.Integer `position:"Query" name:"OwnerId"`
	PageNumber    requests.Integer `position:"Query" name:"PageNumber"`
}

// DescribeLiveStreamOnlineUserNumByDomainResponse is the response struct for api DescribeLiveStreamOnlineUserNumByDomain
type DescribeLiveStreamOnlineUserNumByDomainResponse struct {
	*responses.BaseResponse
	RequestId       string                                                  `json:"RequestId" xml:"RequestId"`
	TotalUserNumber int                                                     `json:"TotalUserNumber" xml:"TotalUserNumber"`
	Count           int                                                     `json:"Count" xml:"Count"`
	PageNumber      int                                                     `json:"pageNumber" xml:"pageNumber"`
	PageSize        int                                                     `json:"pageSize" xml:"pageSize"`
	OnlineUserInfo  OnlineUserInfoInDescribeLiveStreamOnlineUserNumByDomain `json:"OnlineUserInfo" xml:"OnlineUserInfo"`
}

// CreateDescribeLiveStreamOnlineUserNumByDomainRequest creates a request to invoke DescribeLiveStreamOnlineUserNumByDomain API
func CreateDescribeLiveStreamOnlineUserNumByDomainRequest() (request *DescribeLiveStreamOnlineUserNumByDomainRequest) {
	request = &DescribeLiveStreamOnlineUserNumByDomainRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Cdn", "2014-11-11", "DescribeLiveStreamOnlineUserNumByDomain", "", "")
	return
}

// CreateDescribeLiveStreamOnlineUserNumByDomainResponse creates a response to parse from DescribeLiveStreamOnlineUserNumByDomain response
func CreateDescribeLiveStreamOnlineUserNumByDomainResponse() (response *DescribeLiveStreamOnlineUserNumByDomainResponse) {
	response = &DescribeLiveStreamOnlineUserNumByDomainResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
