package cdn

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeLiveStreamRelayPushData invokes the cdn.DescribeLiveStreamRelayPushData API synchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamrelaypushdata.html
func (client *Client) DescribeLiveStreamRelayPushData(request *DescribeLiveStreamRelayPushDataRequest) (response *DescribeLiveStreamRelayPushDataResponse, err error) {
	response = CreateDescribeLiveStreamRelayPushDataResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeLiveStreamRelayPushDataWithChan invokes the cdn.DescribeLiveStreamRelayPushData API asynchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamrelaypushdata.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeLiveStreamRelayPushDataWithChan(request *DescribeLiveStreamRelayPushDataRequest) (<-chan *DescribeLiveStreamRelayPushDataResponse, <-chan error) {
	responseChan := make(chan *DescribeLiveStreamRelayPushDataResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeLiveStreamRelayPushData(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeLiveStreamRelayPushDataWithCallback invokes the cdn.DescribeLiveStreamRelayPushData API asynchronously
// api document: https://help.aliyun.com/api/cdn/describelivestreamrelaypushdata.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeLiveStreamRelayPushDataWithCallback(request *DescribeLiveStreamRelayPushDataRequest, callback func(response *DescribeLiveStreamRelayPushDataResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeLiveStreamRelayPushDataResponse
		var err error
		defer close(result)
		response, err = client.DescribeLiveStreamRelayPushData(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeLiveStreamRelayPushDataRequest is the request struct for api DescribeLiveStreamRelayPushData
type DescribeLiveStreamRelayPushDataRequest struct {
	*requests.RpcRequest
	RelayDomain   string           `position:"Query" name:"RelayDomain"`
	SecurityToken string           `position:"Query" name:"SecurityToken"`
	EndTime       string           `position:"Query" name:"EndTime"`
	StartTime     string           `position:"Query" name:"StartTime"`
	OwnerId       requests.Integer `position:"Query" name:"OwnerId"`
}

// DescribeLiveStreamRelayPushDataResponse is the response struct for api DescribeLiveStreamRelayPushData
type DescribeLiveStreamRelayPushDataResponse struct {
	*responses.BaseResponse
	RequestId                string                   `json:"RequestId" xml:"RequestId"`
	RelayPushDetailModelList RelayPushDetailModelList `json:"RelayPushDetailModelList" xml:"RelayPushDetailModelList"`
}

// CreateDescribeLiveStreamRelayPushDataRequest creates a request to invoke DescribeLiveStreamRelayPushData API
func CreateDescribeLiveStreamRelayPushDataRequest() (request *DescribeLiveStreamRelayPushDataRequest) {
	request = &DescribeLiveStreamRelayPushDataRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Cdn", "2014-11-11", "DescribeLiveStreamRelayPushData", "", "")
	return
}

// CreateDescribeLiveStreamRelayPushDataResponse creates a response to parse from DescribeLiveStreamRelayPushData response
func CreateDescribeLiveStreamRelayPushDataResponse() (response *DescribeLiveStreamRelayPushDataResponse) {
	response = &DescribeLiveStreamRelayPushDataResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
